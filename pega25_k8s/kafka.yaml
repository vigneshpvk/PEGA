apiVersion: v1
kind: Service
metadata:
  name: kafka
  namespace: default
spec:
  ports:
    - name: kafka
      port: 9092
      targetPort: 9092
  selector:
    app: kafka
  clusterIP: None
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: kafka
  namespace: default
spec:
  serviceName: kafka
  replicas: 1
  selector:
    matchLabels:
      app: kafka
  template:
    metadata:
      labels:
        app: kafka
    spec:
      containers:
        - name: kafka
          image: bitnamilegacy/kafka:3.7.1
          resources:
            requests:
              cpu: "500m"   # minimum CPU guaranteed
            limits:
              cpu: "1"      # maximum CPU allowed
          env:
            - name: KAFKA_CFG_ZOOKEEPER_CONNECT
              value: "zookeeper-0.zookeeper.default.svc.cluster.local:2181"
            - name: KAFKA_CFG_ADVERTISED_LISTENERS
              value: "PLAINTEXT://kafka-0.kafka.default.svc.cluster.local:9092"
            - name: KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP
              value: "PLAINTEXT:PLAINTEXT"
            - name: KAFKA_CFG_BROKER_ID
              value: "0"
            - name: ALLOW_PLAINTEXT_LISTENER
              value: "yes"
            - name: KAFKA_CFG_LOG_RETENTION_HOURS
              value: "168"  # Retain messages for 7 days
            - name: KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE
              value: "true"
          ports:
            - containerPort: 9092
          volumeMounts:
            - name: kafka-data
              mountPath: /bitnami/kafka
  volumeClaimTemplates:
    - metadata:
        name: kafka-data
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 10Gi
